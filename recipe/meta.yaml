{% set name = "pysjef" %}
{% set version = "1.42.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/molpro/sjef/archive/refs/tags//{{ version }}.tar.gz
  sha256: 6d071970f35dc4d7e2c98dd0634d6eff62e1127e21f9a101b9e64c1aa7c75b42

build:
  script:
    - echo __version__ = "{{ version }}" > pysjef/pysjef/_version.py  # [win]
    - cmake -LAH -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=%PREFIX% -DCMAKE_INSTALL_INCLUDEDIR=%PREFIX%\include  -DCMAKE_INSTALL_LIBDIR=%PREFIX%\Library\lib -B cmake-build .  # [win]
    - cmake --build cmake-build --config Release --target install  # [win]
    - cd pysjef  # [win]
    - {{ PYTHON }} -m pip install . -vv  # [win]
    - CXXFLAGS="${CXXFLAGS} -D_LIBCPP_DISABLE_AVAILABILITY -DBOOST_ASIO_DISABLE_STD_ALIGNED_ALLOC" cmake -B cmake-build . -DCMAKE_INSTALL_PREFIX=$PREFIX  # [osx and x86]
    - cmake -B cmake-build . -DBUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX  # [arm64 or linux]
    - cmake --build cmake-build -t install  # [unix]
    - echo __version__ = \"{{ version }}\" > pysjef/pysjef/_version.py  # [unix]
    - cd pysjef && {{ PYTHON }} -m pip install . -vv  # [unix]
    - rm -f $(grep -v /bin/sjef ../cmake-build/install_manifest.txt)  # [unix]
  number: 0

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython >=3.0                                 # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - cmake >=3.14
    - make
  host:
    - python
    - pip
    - libboost-devel
    - pugixml >=1.10
    - cython >=3.0
    - setuptools
  run:
    - python
    - lxml >=4.0
    - rsync  # [not win]
    - regex
    - numpy >=1.17
    - m2-base  # [win]

test:
  imports:
    - pysjef
    - pysjef.project
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/molpro/sjef
  summary: |
    Python Simple Job Execution Framework (Pysjef) is pronounced pie-chef
  description: A library that supports the running of any program asynchronously either locally, directly on a remote machine, or via a batch queueing system
  license: MIT
  license_family: MIT
  license_file: LICENSE
  doc_url: https://molpro.github.io/pysjef
  dev_url: https://github.com/molpro/sjef

extra:
  recipe-maintainers:
    - pjknowles
    - molpro-owner
